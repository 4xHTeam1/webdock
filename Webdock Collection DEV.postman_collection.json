{
	"info": {
		"_postman_id": "3421c408-7e87-430a-8bc5-330d6041f8e2",
		"name": "Webdock Collection DEV",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "17492374"
	},
	"item": [
		{
			"name": "Webdock-auth",
			"item": [
				{
					"name": "Verify Auth token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdmF0YXJVUkwiOiIiLCJlbWFpbCI6Im1oaG81Njg2NkBlZHUudWNsLmRrIiwiaWQiOjIyNTQ0LCJuYW1lIjoiTWlrZSBIb3ZlZHNrb3YifQ.h1R1tD5lTDVmF-wz7YzGt6_vbkUEsfHMN3hUf6vcmt4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:8080/auth/verify"
					},
					"response": []
				}
			]
		},
		{
			"name": "Webdock-admin",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Get All Users",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "localhost:8080/admin/users"
							},
							"response": []
						},
						{
							"name": "Get User By ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/users/1"
							},
							"response": []
						},
						{
							"name": "Update User Role",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"role\": \"ADMIN\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/admin/users/role/22544"
							},
							"response": []
						}
					]
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "Get All Categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/Categories"
							},
							"response": []
						},
						{
							"name": "Get Category By ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/Categories/1"
							},
							"response": []
						},
						{
							"name": "Create Category",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Test Category\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/admin/Categories/"
							},
							"response": []
						},
						{
							"name": "Update Category",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"testUpdateCategory\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/admin/Categories/4"
							},
							"response": []
						},
						{
							"name": "Delete Category",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/Categories/4"
							},
							"response": []
						}
					]
				},
				{
					"name": "Statuses",
					"item": [
						{
							"name": "Get All Statuses",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/Statuses"
							},
							"response": []
						},
						{
							"name": "Get Status By ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/Statuses/1"
							},
							"response": []
						},
						{
							"name": "Create Status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"testStatus\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/admin/Statuses"
							},
							"response": []
						},
						{
							"name": "Update Status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"TestUpdateStatus\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/admin/Statuses/4"
							},
							"response": []
						},
						{
							"name": "Delete Status",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/Statuses/4"
							},
							"response": []
						}
					]
				},
				{
					"name": "Features",
					"item": [
						{
							"name": "Update Feature Status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "requesterId",
										"value": "{{requesterId}}",
										"type": "text"
									}
								],
								"url": "localhost:8080/admin/features/status/1/1"
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": {
					"key": "",
					"value": ""
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Webdock-email",
			"item": [
				{
					"name": "Send Upvote Email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ownerId\": 22544,\r\n    \"subject\": \"test\",\r\n    \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n    },\r\n    \"feature\": {\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\"\r\n    },\r\n    \"link\": \"http://localhost:5173/feature-request/1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:8080/email/sendUpvoteEmail"
					},
					"response": []
				},
				{
					"name": "DEBUG send daily summary email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ownerId\": 22544,\r\n    \"subject\": \"test\",\r\n    \"features\": [{\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"title\": \"Support for security keys\",\r\n        \"description\": \"It would be nice to have support for security keys like Yubikey for 2FA or as a passwordless sign-in option\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    }\r\n    ],    \r\n    \"comments\": [{\r\n        \"comment\": \"Support for security keys\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"replies\": [\r\n        {\r\n        \"user\": {\r\n            \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n            \"email\": \"mikehovedskov@gmail.com\",\r\n            \"name\": \"Mike Hovedskov\"\r\n        }, \r\n        \"comment\": \"test reply\"\r\n        },\r\n        {\r\n        \"user\": {\r\n            \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n            \"email\": \"mikehovedskov@gmail.com\",\r\n            \"name\": \"Mike Hovedskov\"\r\n        }, \r\n        \"comment\": \"test reply2\"\r\n        }\r\n        ],\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"comment\": \"Support for security keys\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"comment\": \"Support for security keys\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"comment\": \"Support for security keys\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"comment\": \"Support for security keys\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    },{\r\n        \"comment\": \"Support for security keys\",\r\n        \"link\": \"http://localhost:5173/feature-request/1\",\r\n        \"user\": {\r\n        \"avatarURL\": \"https://avatars.githubusercontent.com/u/8186664?v=4\",\r\n        \"email\": \"mikehovedskov@gmail.com\",\r\n        \"name\": \"Mike Hovedskov\"\r\n        }\r\n    }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:6000/sendDailySummaryEmail"
					},
					"response": []
				}
			]
		},
		{
			"name": "Webdock-feature",
			"item": [
				{
					"name": "Features",
					"item": [
						{
							"name": "Get all features",
							"request": {
								"method": "GET",
								"header": [],
								"url": "localhost:8080/features/"
							},
							"response": []
						},
						{
							"name": "Get feature by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": "localhost:8080/features/1"
							},
							"response": []
						},
						{
							"name": "Create Feature",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 21125284,\r\n    \"title\": \"test1\",\r\n    \"description\": \"testdesc1\",\r\n    \"userId\": 22544,\r\n    \"category\":{\r\n        \"id\": 1,\r\n        \"name\": \"category 1\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features"
							},
							"response": []
						},
						{
							"name": "Update Feature",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedTitle\",\r\n    \"description\": \"updatedDesc\",\r\n    \"statusId\": 2,\r\n    \"categoryId\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/1"
							},
							"response": []
						},
						{
							"name": "Delete Feature",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "localhost:8080/features/7"
							},
							"response": []
						}
					]
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Create Comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"userId\": 22544,\r\n    \"comment\": \"testcomment2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/comment"
							},
							"response": []
						},
						{
							"name": "Reply to comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 7,\r\n    \"userId\": 22544,\r\n    \"comment\": \"testReply3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/comment/reply"
							},
							"response": []
						},
						{
							"name": "Delete Comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "localhost:8080/features/comment/7"
							},
							"response": []
						},
						{
							"name": "Delete Reply",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "localhost:8080/features/comment/reply/7"
							},
							"response": []
						},
						{
							"name": "Update Comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"comment\": \"Testupdate\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/comment/4"
							},
							"response": []
						},
						{
							"name": "Update Reply",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"comment\": \"testreplyupdate\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/comment/reply/5"
							},
							"response": []
						},
						{
							"name": "Get All Comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": "localhost:8080/features/comment/1"
							},
							"response": []
						}
					]
				},
				{
					"name": "Upvote",
					"item": [
						{
							"name": "Upvote Feature",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\":2,\r\n    \"userId\": 22544\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/upvote/"
							},
							"response": []
						},
						{
							"name": "Unvote Feature",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"userId\": 22544\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/upvote/2/22544"
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification",
					"item": [
						{
							"name": "Get notifications by OwnerId",
							"request": {
								"method": "GET",
								"header": [],
								"url": "localhost:8080/features/notification/22544"
							},
							"response": []
						},
						{
							"name": "Create a new Notification",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ownerId\": 22544,\r\n    \"userId\": 1,\r\n    \"featureRequestId\": 1,\r\n    \"type\": \"upvote\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:8080/features/notification/"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Webdock-search",
			"item": [
				{
					"name": "Search All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/all?query=feature",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"all"
							],
							"query": [
								{
									"key": "query",
									"value": "feature"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search User by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/user/name?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"user",
								"name"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search User by email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/user/email?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"user",
								"email"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Feature by users name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/feature/user/name?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"feature",
								"user",
								"name"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Feature by users email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/feature/user/email?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"feature",
								"user",
								"email"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Feature by category name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/feature/category?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"feature",
								"category"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Feature by title",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/feature/title?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"feature",
								"title"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Feature by description",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/search/feature/description?query=test",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"search",
								"feature",
								"description"
							],
							"query": [
								{
									"key": "query",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "requesterId",
			"value": "3",
			"type": "string"
		}
	]
}